objects

An object in JavaScript is a collection of key-value pairs, 
where keys are strings (property names) and values can be any data type. 
Objects help store and organize data efficiently.


syntax

const objectName = {
  key1: value1,
  key2: value2,
  key3: value3
};


const array=[1,2,4,5,6,7]
const skills=['html','css','js']


const arrayObj=[
  {},{}
]




----------------------------------------------------


const user = {
  name: "Athul Jain",
  age: 25,
  email: "athul@example.com",
  isVerified: true
};



-----------------------------------------------------------


Nested Objects

const student = {
  name: "Arjun",
  address: {
    city: "Kochi",
    zip: 682020
  }
};
console.log(student.address.city); // Output: Kochi


 Adding and Deleting Properties

 const user = { name: "Athul" };
user.age = 25; // Add
delete user.name; // Delete
console.log(user); // Output: { age: 25 }



Object Methods
Functions inside objects are called methods.


const user = {
  name: "Athul",
  greet() {
    return `Hello, ${this.name}`;
  }
};
console.log(user.greet()); // Output: Hello, Athul


Looping Through Object Properties
Using for...in loop:


const user = { name: "Athul", age: 25 };
for (let key in user) {
  console.log(key, user[key]);
}

Freezing and Sealing Objects
Object.freeze() makes an object immutable.

Object.seal() prevents adding or deleting properties but allows editing existing ones.


const user = { name: "Athul" };
Object.freeze(user);
user.name = "Jain"; // No change
console.log(user.name); // Output: Athul



Q&A

 What is an object in JavaScript?
Answer:

An object in JavaScript is a collection of key-value pairs. 
Keys are strings (or Symbols), and the values can be any data type 
(string, number, boolean, array, function, or even another object). 
Objects are used to store structured data.


How do you access properties of an object?
Answer:
You can access object properties using dot notation or bracket notation:


const user = {
  name: "Athul Jain",
  age: 25,
  email: "athul@example.com",
  isVerified: true
};


console.log(user.name); // dot notation
console.log(user['email']); // bracket notation


What is the difference between an object and an array?
Answer:

Object: key-value pairs

Array: indexed collection of values


const user = { name: "Athul", age: 25 };
const array = [1, 2, 3, 4];


How can you check if a property exists in an object?
Answer:
You can use the in operator or hasOwnProperty():

'name' in user; // true
user.hasOwnProperty('email'); // true


What is object destructuring?
Answer:
It allows extracting values from an object into variables:


const { name, email } = user;
console.log(name, email);



 How can you merge two objects?
Answer:
Using Object.assign() or spread operator:


const obj1 = { a: 1 };
const obj2 = { b: 2 };
const merged = { ...obj1, ...obj2 };
console.log(merged); // { a: 1, b: 2 }



----------------------------------------


Write a function to count how many keys are in an object.
Merge two objects and overwrite the first if keys match.

