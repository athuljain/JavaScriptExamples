What is Programming?

        Programming is the process of giving instructions to a computer to perform specific tasks. 
        These instructions are written in a language that the computer can understand, 
        known as a programming language.


Why do we need programming?
        -   To solve problems efficiently using computers.
        -   To automate repetitive tasks.
        -   To create applications, websites, games, and more.

What is JavaScript?

        JavaScript is a lightweight, OOP (Object oriented Programming) language.
        It is a scripting language for web pages.
        It is used to add interactivity and dynamic effects to web pages.
        “.js” is the extension.
        Nowadays used in server-side (Backend) development.
        JS Frontend Frameworks: React, Angular, Vue.
        JS Backend Frameworks: Express, Node.


Why Do We Use JavaScript?

Dynamic Web Pages – Enables interactive elements like pop-ups, animations, and forms.
Client-Side Validation – Validates user input in forms before sending data to the server.
DOM (document object model) Manipulation – Allows changes to HTML elements dynamically (e.g., hide/show elements).
Event Handling – Responds to user actions (clicks, mouse movements, keypresses).
Asynchronous Operations – Handles API calls, AJAX requests, and real-time updates without reloading the page.
Server-Side Development – With Node.js, JavaScript is also used for backend development.
Cross-Platform Development – Used for web apps, mobile apps (React Native), and even desktop applications (Electron.js).


Advantages of JavaScript
✅ Fast Execution – Runs directly in the browser without needing a compiler.
✅ Simple & Easy to Learn – Syntax is user-friendly, making it great for beginners.
✅ Client-Side Execution – Reduces server load by handling tasks in the browser.
✅ Highly Versatile – Works on the frontend, backend, mobile, and even IoT devices.
✅ Rich Ecosystem – Huge libraries and frameworks (React, Angular, Vue, Node.js).
✅ Interactivity – Improves user experience with dynamic and interactive UI elements.
✅ Cross-Browser Support – Works on all modern browsers without installation.


JavaScript is a powerful and widely used programming language for web development. 
It enables interactivity, enhances user experience, and is essential for 
both frontend and backend development.




Do we need to install Javascript?
        NO. 
        JavaScript is present everywhere in browsers, on your phone, etc.


-----------------------------------------------------------------------------------------

What are Variables?
        In JavaScript, variables are used to store data. 
        They are an essential part of any programming language, 
        as they allow you to store, retrieve, and manipulate data in your programs.

        There are a few different ways to declare variables in JavaScript, 
        each with its own syntax and rules.

            To declare a variable in JavaScript, 
            you use the "var" keyword followed by the name of the variable.

                var x;
                var name

                    * var:-
                        Used in earlier versions of JavaScript.
                        Function-scoped or globally-scoped.
                        Can be re-declared and updated.

            
            This declares a variable called "x" but does not assign any value to it. 
            You can also assign a value to a variable when you declare it

                var x=10
                var name="aleena"

            



            In JavaScript, you can also use the "let" and "const" keywords to declare variables..

            The "let" keyword is used to declare a variable that can be reassigned later, 

            while the "const" keyword is used to declare a variable that cannot be reassigned.

                let y = 20;
                const z = 30;


                        * let:-
                            Introduced in ES6.
                            Block-scoped.
                            Can be updated but not re-declared in the same scope.

                        * const:-
                            Introduced in ES6.
                            Block-scoped.
                            Cannot be updated or re-declared. Must be initialized during declaration.


        let variableName = value; // Declaring a variable using `let`
        const constantName = value; // Declaring a constant using `const`
        var oldVariable = value; // Declaring a variable using `var`



    Use const for values that won't change.
    Use let for values that will change.
    Avoid using var in modern code—it has unpredictable scoping.


----------------------------------------------------------------------------------------------

Data Types
    In JavaScript, there are several data types that you can use to store different types of data. 
    Some common data types include:

        Numbers (e.g. 10, 3.14)
        Strings (e.g. "hello", 'world')
        Booleans (e.g. true, false)
        Arrays (e.g. [1, 2, 3])
        Objects (e.g. { name: "John", age: 30 })



Data types in JavaScript represent the type of data that can be stored and manipulated 
within a program. JavaScript has two categories of data types: 

Primitive and Non-Primitive (Reference).

    Primitives are the simplest and most basic data types in JavaScript. 

        Numbers (e.g. 10, 3.14)
        Strings (e.g. "hello", 'world')
        Booleans (e.g. true, false)
        Null (a special value that represents an absence of value)
        Undefined (a special value that represents an uninitialized variable)

        Primitives are immutable, which means that once they are created, they cannot be changed.
           
            let x = 10
            x = 20; // x is now 20

    
    Non Primitive (Object) are more complex data types in JavaScript and are 
    used to represent real-world objects or abstract concepts. 
    They are composed of key-value pairs, where the keys are strings and the values 
    can be any data type (including primitives and other objects).
    Objects are mutable, which means that they can be changed after they are created.


    --------------------------------------------------------------------------------------



Operators and Expressions

    Operators in JavaScript are symbols that perform specific operations 
    on one or more operands (values or variables). For example, 
    the addition operator (+) adds two operands together and 
    the assignment operator (=) assigns a value to a variable.
    There are several types of operators in JavaScript, including:

        Arithmetic operators (e.g. +, -, *, /, %)
        Comparison operators (e.g. >, <, >=, <=, ==, !=)
        Logical operators (e.g. &&, ||, !)
        Assignment operators (e.g. =, +=, -=, *=, /=)
        Conditional (ternary) operator (e.g. ?:)


        


Q&a -------------------------------------------------------------------------------------------------------


 1. What is JavaScript and why is it used?
Answer:
JavaScript is a lightweight, object-oriented scripting language used to create dynamic and interactive web pages. 
It allows you to control web page behavior, manipulate the DOM, handle events, perform validations, 
and even build full backend services using Node.js.





2. What is the difference between var, let, and const?

| Keyword | Scope           | Re-declaration | Reassignment | Use Case              |
| ------- | --------------- | -------------- | ------------ | --------------------- |
| var     | Function/global | Yes            | Yes          | Older JS code         |
| let     | Block           | No             | Yes          | Variables that change |
| const   | Block           | No             | No           | Constants (fixed)     |




3. What are the different data types in JavaScript?


Primitive types: Number, String, Boolean, Null, Undefined, Symbol, BigInt.

Non-Primitive (Reference): Objects, Arrays, Functions.


4. What is the difference between undefined and null?


undefined means a variable has been declared but not assigned a value.

null is an assignment value that represents "no value" or "empty".



let a;
console.log(a); // undefined

let b = null;
console.log(b); // null



5. What are JavaScript operators? Give examples.


Operators are symbols used to perform operations on values/variables.

Examples:

Arithmetic: +, -, *, /, %

Comparison: ==, ===, >, <, !=

Logical: &&, ||, !

Assignment: =, +=, -=

Ternary: condition ? value1 : value2




6. What are variables in JavaScript? How are they declared?


Variables store data in memory. They are declared using:

var (function scoped or global scope),

let (block scoped, can be updated),

const (block scoped, cannot be updated).



7. What is the use of typeof operator?


The typeof operator is used to find the type of a variable.



typeof "Hello"     // "string"
typeof 42          // "number"
typeof true        // "boolean"
typeof undefined   // "undefined"
typeof null        // "object"



8. What is the difference between == and === in JavaScript?

== compares values after type coercion (loose equality).

=== compares both value and type (strict equality).

'5' == 5   // true
'5' === 5  // false


9. What is an object in JavaScript?

const person = {
  name: "Athul",
  age: 25,
  isStudent: false
};

10. Why is JavaScript called a dynamic language?

JavaScript is called dynamic because:

Variables can hold values of any type.

Data types are determined at runtime.

You can change the type of value stored in a variable dynamically.


