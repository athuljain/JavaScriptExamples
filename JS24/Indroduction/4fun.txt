What is a Function in JavaScript?
A function is a reusable block of code designed to perform a specific task.

✅ Benefits of Using Functions
Code Reusability – Write once, reuse anywhere.

Modularity – Break your code into logical parts.

Improved Readability – Easier to understand and debug.

Reduces Redundancy – Avoid repetitive code.

----------------------------------------------------------------------------------------------
// syntax

        function FunctionOne(){

        }


        function functionName(parameters) {
            // Code to be executed
            return value; // Optional
        }



function greet() {
    console.log("Hello!");
}
greet();


-----------------------------------------------------------------------------------------------

Named Functions: A function with a specific name.

Anonymous Functions: Functions without a name, often used as expressions or callbacks.

Arrow Functions: A concise syntax for writing functions.

Immediately Invoked Function Expressions (IIFE): 

Functions that execute as soon as they are defined.


Named Functions
    A function with a specific name, typically used for reusable tasks.


        function greet(name) {
        return `Hello, ${name}!`;
        }
        console.log(greet("John")); // Output: Hello, John!


Anonymous Functions
    Functions without a name, often assigned to variables or used as callbacks.

        const greet = function(name) {
        return `Hi, ${name}!`;
        };
        console.log(greet("Alice")); // Output: Hi, Alice!


Arrow Functions

A shorthand way of writing functions (introduced in ES6).

        const greet = (name) => `Hey, ${name}!`;
        console.log(greet("Bob")); // Output: Hey, Bob!


Immediately Invoked Function Expressions (IIFE)

    Functions that execute as soon as they are defined, often used to create a private scope.
    A function that runs as soon as it is defined.

            (function() {
            console.log("This IIFE runs immediately!");
            })(); 
            // Output: This IIFE runs immediately!


 JavaScript has several other types of functions, each designed for specific use cases.




What are rest parameters?
    Rest parameters (ES6, syntax: `...paramName`) allow a function to 
    accept an indefinite number of arguments as an array. It collects all remaining 
    arguments passed to the function into a single array. It must be the last parameter in the 
    function definition.

    ```javascript
    function sumAll(...numbers) { // numbers will be an array
        return numbers.reduce((sum, num) => sum + num, 0);
    }
    console.log(sumAll(1, 2, 3));    // 6
    console.log(sumAll(10, 20, 30, 40)); // 100







 Print numbers from 1 to 10 using a while loop.?(named function)
 Calculate the sum of all odd numbers from 1 to 50 using a while loop.?Anonymous Function
 Halve a number repeatedly until it becomes less than 1, printing each result.?(Arrow Function)
 



Write a function to check if a number is even or odd.?
Create an arrow function to calculate the square of a number.?
Write a function to return the maximum of two numbers.?
Write an anonymous function that returns the factorial of a number.
Arrow function to reverse a string.
Function to find whether a number is prime.
Function to print all even numbers from 1 to N.?
Arrow function to calculate the average of 3 numbers.?
IIFE to print the current date.?
Create a function that counts vowels in a string.


